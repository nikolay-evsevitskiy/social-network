{"version":3,"sources":["Redux/dialogs-reducer.ts","utils/object-helper.ts","Redux/users-reducer.ts","api/api.ts","componets/Navbar/Navbar.module.css","Redux/auth-reducer.ts","componets/Header/Header.tsx","componets/Header/HeaderContainer.tsx","componets/Login/Login.tsx","Redux/app-reducer.ts","Redux/sidebar-reducer.ts","Redux/redux-store.ts","componets/Navbar/Navbar.tsx","componets/News/News.tsx","componets/Music/Music.tsx","componets/Setting/Settings.tsx","App.tsx","reportWebVitals.ts","index.tsx","assets/images/Rolling-1s-200px.svg","componets/Common/Preloader/Preloader.tsx","componets/Common/FormsControls/FormControl.module.css","componets/Common/FormsControls/FormsControls.tsx","utils/validators/validators.ts","componets/Header/Header.module.css","Redux/profile-reducer.ts"],"names":["initialState","dialogs","id","name","messages","message","addMessageActionCreator","newMessage","type","dialogPageReducer","state","action","newText","Date","getTime","UpdateObjectInArray","items","itemId","newObjectProps","map","t","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","followSuccess","userId","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleIsFollowingProgress","getUser","dispatch","a","usersAPI","getUsers","response","totalCount","followUnfollowFlow","apiMethod","actionCreator","resultCode","follow","bind","unfollow","usersReducer","followed","filter","instance","axios","create","withCredentials","baseURL","headers","get","then","data","delete","post","getProfile","userID","profileAPI","authAPI","me","login","email","password","rememberMe","logout","getStatus","updateStatus","status","put","module","exports","logIn","isAuth","setAuthUserData","getAuthUserData","authReducer","Header","className","s","header","src","alt","loginBlock","onClick","to","HeaderContainer","this","props","React","Component","connect","auth","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","Field","component","Input","validate","required","placeholder","formSummaryError","LoginAPIComponent","length","stopSubmit","_error","formData","initialized","appReducer","sidebarReducer","rootReducer","combineReducers","profilePage","profileReducer","dialogPage","sideBar","usersPage","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Navbar","nav","item","activeClassName","active","News","Music","Settings","DialogsContainer","lazy","ProfileContainer","UsersContainer","App","initializedApp","path","render","Suspense","fallback","Preloader","AppContainer","SamuraiJSApp","StrictMode","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById","preloader","FormControl","input","meta","touched","hasError","formControl","children","Textarea","restProps","child","value","maxLengthCreator","maxValue","posts","likes","profile","postAdd","setStatus","getUserProfile","newPost","i","postId"],"mappings":"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","file":"static/js/main.e1029393.chunk.js","sourcesContent":["export type MessagesType = {\r\n    id: number\r\n    message: string\r\n};\r\nexport type DialogsType = {\r\n    id: number\r\n    name: string\r\n};\r\ntype MessageActionType = ReturnType<typeof addMessageActionCreator>;\r\n\r\nexport type InitialStateTypeDialogsPage = typeof initialState\r\n\r\nconst initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Mark'},\r\n        {id: 2, name: 'Miron'},\r\n        {id: 3, name: 'Vadim'},\r\n        {id: 4, name: 'Milana'},\r\n        {id: 5, name: 'Polina'}\r\n    ] as DialogsType[],\r\n    messages: [\r\n        {id: 1, message: 'Hi!'},\r\n        {id: 2, message: 'How are you?'},\r\n        {id: 3, message: 'Cool!!!'}\r\n    ] as MessagesType[]\r\n}\r\n\r\nconst dialogPageReducer = (state: InitialStateTypeDialogsPage = initialState, action: MessageActionType): InitialStateTypeDialogsPage => {\r\n    switch (action.type) {\r\n        case 'social-network/dialogs-reducer/ADD-MESSAGE': {\r\n            const newText: MessagesType = {\r\n                id: new Date().getTime(),\r\n                message: action.newMessage\r\n            };\r\n            return {...state, messages: [...state.messages, newText]};\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addMessageActionCreator = (newMessage: string) => {\r\n    return {type: \"social-network/dialogs-reducer/ADD-MESSAGE\", newMessage} as const\r\n};\r\n\r\nexport default dialogPageReducer","import {UserType} from \"../Redux/users-reducer\";\r\n\r\nexport const UpdateObjectInArray = (items: Array<UserType>, itemId: number, newObjectProps: {}) => {\r\n    return items.map(t => {\r\n        if (t.id === itemId) {\r\n            return {...t, ...newObjectProps}\r\n        }\r\n        return t;\r\n    })\r\n\r\n}","import {FollowType, usersAPI} from \"../api/api\";\r\nimport {Dispatch} from \"redux\";\r\nimport {UpdateObjectInArray} from \"../utils/object-helper\";\r\n\r\ntype FollowActionType = ReturnType<typeof followSuccess>\r\ntype UnfollowActionType = ReturnType<typeof unfollowSuccess>\r\ntype UsersActionType = ReturnType<typeof setUsers>\r\ntype SetCurrentPageType = ReturnType<typeof setCurrentPage>\r\ntype SetTotalUserCountType = ReturnType<typeof setTotalUserCount>\r\ntype ToggleIsFetchingType = ReturnType<typeof toggleIsFetching>\r\ntype ToggleIsFollowingProgress = ReturnType<typeof toggleIsFollowingProgress>\r\ntype ActionType =\r\n    FollowActionType\r\n    | UnfollowActionType\r\n    | UsersActionType\r\n    | SetCurrentPageType\r\n    | SetTotalUserCountType\r\n    | ToggleIsFetchingType\r\n    | ToggleIsFollowingProgress\r\n\r\nexport type UserType = {\r\n    id: number\r\n    photoUrl: string\r\n    followed: boolean\r\n    name: string\r\n    status: string\r\n    location: UserLocationType\r\n}\r\ntype UserLocationType = {\r\n    country: string\r\n    city: string\r\n}\r\nexport type InitialStateTypeUsersPage = {\r\n    users: Array<UserType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: number[]\r\n}\r\n\r\n\r\nconst initialState: InitialStateTypeUsersPage = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n}\r\n\r\nconst usersReducer = (state: InitialStateTypeUsersPage = initialState, action: ActionType): InitialStateTypeUsersPage => {\r\n    switch (action.type) {\r\n        case 'social-network/users-reducer/FOLLOW':\r\n            return {\r\n                ...state,\r\n                users: UpdateObjectInArray(state.users, action.userId, {followed: true})\r\n            }\r\n        case 'social-network/users-reducer/UNFOLLOW':\r\n            return {\r\n                ...state,\r\n                users: UpdateObjectInArray(state.users, action.userId, {followed: false})\r\n            }\r\n        case 'social-network/users-reducer/SET-USERS':\r\n            return {\r\n                ...state,\r\n                users: [...action.users]\r\n            }\r\n        case 'social-network/users-reducer/SET-CURRENT-PAGE':\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        case 'social-network/users-reducer/SET-TOTAL-USER-COUNT':\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalCount\r\n            }\r\n        case 'social-network/users-reducer/TOGGLE-IS-FETCHING':\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case 'social-network/users-reducer/TOGGLE-IS-FOLLOWING-PROGRESS':\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.followingInProgress\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const followSuccess = (userId: number) => {\r\n    return {type: 'social-network/users-reducer/FOLLOW', userId} as const\r\n};\r\nexport const unfollowSuccess = (userId: number) => {\r\n    return {type: 'social-network/users-reducer/UNFOLLOW', userId} as const\r\n};\r\nexport const setUsers = (users: UserType[]) => {\r\n    return {type: 'social-network/users-reducer/SET-USERS', users} as const\r\n};\r\nexport const setCurrentPage = (currentPage: number) => {\r\n    return {type: 'social-network/users-reducer/SET-CURRENT-PAGE', currentPage} as const\r\n}\r\nexport const setTotalUserCount = (totalCount: number) => {\r\n    return {type: 'social-network/users-reducer/SET-TOTAL-USER-COUNT', totalCount} as const\r\n}\r\nexport const toggleIsFetching = (isFetching: boolean) => {\r\n    return {type: 'social-network/users-reducer/TOGGLE-IS-FETCHING', isFetching} as const\r\n}\r\nexport const toggleIsFollowingProgress = (userId: number, followingInProgress: boolean) => {\r\n    return {type: 'social-network/users-reducer/TOGGLE-IS-FOLLOWING-PROGRESS', followingInProgress, userId} as const\r\n}\r\n\r\nexport const getUser = (currentPage: number, pageSize: number) => async (dispatch: Dispatch) => {\r\n    dispatch(toggleIsFetching(true))\r\n    dispatch(setCurrentPage(currentPage))\r\n    let response = await usersAPI.getUsers(currentPage, pageSize)\r\n    dispatch(toggleIsFetching(false))\r\n    dispatch(setUsers(response.items))\r\n    dispatch(setTotalUserCount(response.totalCount))\r\n}\r\ntype ActionCreatorFollowUnfollowType = (userId: number) => FollowActionType | UnfollowActionType\r\ntype ApiMethodType = (id: number) => Promise<FollowType>\r\n\r\nconst followUnfollowFlow = async (userId: number, dispatch: Dispatch, apiMethod: ApiMethodType, actionCreator: ActionCreatorFollowUnfollowType) => {\r\n    dispatch(toggleIsFollowingProgress(userId, true))\r\n    let response = await apiMethod(userId)\r\n    if (response.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleIsFollowingProgress(userId, false))\r\n\r\n}\r\n\r\nexport const follow = (userId: number) => async (dispatch: any) => {\r\n    await followUnfollowFlow(userId, dispatch, usersAPI.follow.bind(usersAPI), followSuccess)\r\n}\r\n\r\nexport const unfollow = (userId: number) => async (dispatch: any) => {\r\n    await followUnfollowFlow(userId, dispatch, usersAPI.unfollow.bind(usersAPI), unfollowSuccess)\r\n}\r\n\r\nexport default usersReducer","import axios from \"axios\";\r\nimport {ProfileStateType} from \"../Redux/profile-reducer\";\r\n\r\n export type FollowType = {\r\n    data: {}\r\n    fieldsErrors: []\r\n    messages: []\r\n    resultCode: 0 | 1\r\n}\r\ntype getUsersType = {\r\n    error: null | string\r\n    items: []\r\n    totalCount: number\r\n}\r\ntype updateStatusType = {\r\n    resultCode: number\r\n    messages: [string]\r\n    data: {}\r\n}\r\ntype loginDataType = {\r\n    resultCode: number\r\n    messages: [],\r\n    data: {\r\n        userId: number\r\n    }\r\n}\r\ntype logoutDataType = {\r\n    resultCode: number\r\n    messages: [],\r\n    data: {}\r\n}\r\n\r\ntype authMeDataType = {\r\n    resultCode: number\r\n    messages: []\r\n    data: {\r\n        id: string\r\n        email: string\r\n        login: string\r\n    }\r\n}\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': '4bd60911-e7ab-47b0-851f-962a07b6cbc2'\r\n    }\r\n})\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage: number = 1, pageSize: number = 10) {\r\n        return instance.get<getUsersType>(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data)\r\n    },\r\n    unfollow(id: number) {\r\n        return instance.delete<FollowType>(`follow/${id}`)\r\n            .then(response => response.data)\r\n    },\r\n    follow(id: number) {\r\n        return instance.post<FollowType>(`follow/${id}`, {})\r\n            .then(response => response.data)\r\n    },\r\n    getProfile(userID: number) {\r\n        return profileAPI.getProfile(userID)\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n\r\n    me() {\r\n        return instance.get<authMeDataType>(`auth/me`, {\r\n            withCredentials: true\r\n        })\r\n    },\r\n    login(email: string, password: string, rememberMe: boolean = false) {\r\n        return instance.post<loginDataType>(`/auth/login`, {email, password, rememberMe})\r\n    },\r\n    logout() {\r\n        return instance.delete<logoutDataType>(`/auth/login`)\r\n    }\r\n\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userID: number) {\r\n        return instance.get<ProfileStateType>(`profile/${userID}`)\r\n    },\r\n    getStatus(userID: string) {\r\n        return instance.get<string>(`profile/status/${userID}`)\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put<updateStatusType>(`profile/status`, {status: status})\r\n    }\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__20N92\",\"item\":\"Navbar_item__2V96j\",\"active\":\"Navbar_active__3BnIE\"};","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {Dispatch} from \"redux\";\r\n\r\ntype SetUserDataType = ReturnType<typeof setAuthUserData>\r\nexport type GetAuthUserDataType = ReturnType<typeof getAuthUserData>\r\n\r\n\r\ntype ActionType = SetUserDataType\r\nexport type InitialStateAuthDataType = {\r\n    data: {\r\n        id: string | null\r\n        email: string | null\r\n        logIn: string | null\r\n        isAuth: boolean\r\n    }\r\n}\r\n\r\nconst initialState: InitialStateAuthDataType = {\r\n    data: {\r\n        email: null,\r\n        id: null,\r\n        logIn: null,\r\n        isAuth: false\r\n    }\r\n}\r\n\r\nconst authReducer = (state: InitialStateAuthDataType = initialState, action: ActionType): InitialStateAuthDataType => {\r\n    switch (action.type) {\r\n        case 'social-network/auth-reducer/SET-USER-DATA':\r\n            return {\r\n                ...state,\r\n                data: {...action.data},\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nconst setAuthUserData = (email: string | null, id: string | null, logIn: string | null, isAuth: boolean) => {\r\n    return {\r\n        type: 'social-network/auth-reducer/SET-USER-DATA', data: {email, id, logIn, isAuth} as const\r\n    }\r\n}\r\n\r\nexport const getAuthUserData = () => async (dispatch: Dispatch<ActionType>) => {\r\n    let response = await authAPI.me()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(response.data.data.email, response.data.data.id, response.data.data.login, true))\r\n    }\r\n};\r\nexport const login = (email: string, password: string, rememberMe: boolean) => async (dispatch: Dispatch<any>) => {\r\n    let response = await authAPI.login(email, password, rememberMe)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages : 'Some error';\r\n        dispatch(stopSubmit('login', {_error: message}))\r\n    }\r\n};\r\nexport const logout = () => async (dispatch: Dispatch<ActionType>) => {\r\n    let response = await authAPI.logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n};\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from './Header.module.css';\r\n\r\ntype HeaderType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n    logout: () => void\r\n}\r\n\r\nexport const Header: React.FC<HeaderType> = ({isAuth, login, logout}) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img src=\"https://thirdtemple.ca/wp-content/uploads/2020/10/social-media-1405601_1280.png\"\r\n                 alt=\"social network\"/>\r\n            <div className={s.loginBlock}>\r\n                {isAuth ? <div>{login} - <button onClick={logout}>Log out</button></div> :\r\n                    <NavLink to={'/login'}>Login</NavLink>}\r\n            </div>\r\n        </header>\r\n    )\r\n}","import React from 'react';\r\nimport {logout} from \"../../Redux/auth-reducer\";\r\nimport {connect} from 'react-redux';\r\nimport {AppStateType} from \"../../Redux/redux-store\";\r\nimport {Header} from \"./Header\";\r\n\r\ntype MapStateToPropsType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n}\r\ntype MapDispatchToPropsType = {\r\n    logout: () => void\r\n}\r\n\r\ntype HeaderContainerType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nclass HeaderContainer extends React.Component<HeaderContainerType> {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Header isAuth={this.props.isAuth} login={this.props.login} logout={this.props.logout}/>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => ({\r\n    isAuth: state.auth.data.isAuth,\r\n    login: state.auth.data.logIn\r\n})\r\n\r\nexport default connect<MapStateToPropsType, MapDispatchToPropsType, {}, AppStateType>(mapStateToProps, {logout})(HeaderContainer);\r\n","import React from \"react\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../Common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../Redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {AppStateType} from \"../../Redux/redux-store\";\r\nimport s from '../Common/FormsControls/FormControl.module.css'\r\n\r\ntype mapDispatchToPropsType = {\r\n    login: (email: string, password: string, rememberMe: boolean) => void\r\n}\r\ntype MapStateToPropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\ntype FormDataType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\nexport const LoginForm: React.FC<InjectedFormProps<FormDataType>> = ({handleSubmit, error}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div>\r\n            <Field component={Input}\r\n                   validate={[required]}\r\n                   type='text'\r\n                   name={'email'}\r\n                   placeholder={'Email'}/>\r\n        </div>\r\n        <div>\r\n            <Field component={Input}\r\n                   validate={[required]}\r\n                   type='password'\r\n                   name={'password'}\r\n                   placeholder={'Password'}/>\r\n        </div>\r\n        <div>\r\n            <Field component={Input}\r\n                   type='checkbox'\r\n                   name={'rememberMe'}/> remember me\r\n        </div>\r\n        {error && <div className={s.formSummaryError}>{error}</div>}\r\n        <div>\r\n            <button>\r\n                Login\r\n            </button>\r\n        </div>\r\n    </form>\r\n}\r\nconst LoginReduxForm = reduxForm<FormDataType>({form: 'login'})(LoginForm)\r\n\r\n\r\nexport const Login = (props: MapStateToPropsType & mapDispatchToPropsType) => {\r\n    const onSubmit = (formData: FormDataType) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n    return <div>\r\n        <h1>LOGIN</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        isAuth: state.auth.data.isAuth\r\n    }\r\n}\r\n\r\nexport const LoginAPIComponent = connect<MapStateToPropsType, mapDispatchToPropsType, {}, AppStateType>(mapStateToProps, {login})(Login)\r\n\r\n\r\n","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\n\r\ntype InitializedSuccessType = ReturnType<typeof initializedSuccessAC>\r\ntype ActionType = InitializedSuccessType\r\nexport type InitialStateType = {\r\n    initialized: boolean\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'social-network/app-reducer/INITIALIZED-SUCCESS':\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst initializedSuccessAC = () => {\r\n    return {type: 'social-network/app-reducer/INITIALIZED-SUCCESS'} as const\r\n}\r\n\r\nexport const initializedApp = () => (dispatch: any) => {\r\n    dispatch(getAuthUserData())\r\n        .then(() => {\r\n            dispatch(initializedSuccessAC())\r\n        })\r\n\r\n\r\n};\r\n\r\n\r\nexport default appReducer","let initialState = {};\r\n\r\n\r\nconst sidebarReducer = (state: any = initialState, action: any) => {\r\n\r\n    return state;\r\n};\r\n\r\nexport default sidebarReducer","import {combineReducers, compose} from 'redux';\r\nimport {createStore} from 'redux';\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogPageReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport {applyMiddleware} from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogPage: dialogPageReducer,\r\n    sideBar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n})\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n\r\nconst composeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)))\r\n\r\n// export const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from './Navbar.module.css';\r\n\r\nexport const Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.active}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.active}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/news\" activeClassName={s.active}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/music\" activeClassName={s.active}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/settings\" activeClassName={s.active}>Settings</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/users\" activeClassName={s.active}>Users</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport const News = () => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport const Music = () => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport const Settings = () =>  {\r\n    return(\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport {HashRouter, Route} from 'react-router-dom';\r\nimport HeaderContainer from \"./componets/Header/HeaderContainer\";\r\nimport {LoginAPIComponent} from \"./componets/Login/Login\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {initializedApp} from \"./Redux/app-reducer\";\r\nimport {AppStateType, store} from \"./Redux/redux-store\";\r\nimport {Preloader} from \"./componets/Common/Preloader/Preloader\";\r\nimport {Navbar} from \"./componets/Navbar/Navbar\";\r\nimport {News} from \"./componets/News/News\";\r\nimport {Music} from \"./componets/Music/Music\";\r\nimport {Settings} from \"./componets/Setting/Settings\";\r\n\r\nconst DialogsContainer = React.lazy(() => import('./componets/Dialogs/DialogsContainer'))\r\nconst ProfileContainer = React.lazy(() => import('./componets/Profile/ProfileContainer'))\r\nconst UsersContainer = React.lazy(() => import('./componets/Users/UsersContainer'))\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    initialized: boolean\r\n}\r\ntype MapDispatchToPropsType = {\r\n    initializedApp: () => void\r\n}\r\ntype AppComponentType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\n\r\nclass App extends React.Component<AppComponentType> {\r\n\r\n    componentDidMount() {\r\n        this.props.initializedApp()\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader isFetching={true}/>\r\n        }\r\n        return (\r\n            <HashRouter>\r\n                <div className='app-wrapper'>\r\n                    <HeaderContainer/>\r\n                    <Navbar/>\r\n                    <div className='app-wrapper-content'>\r\n                        <Route path={'/dialogs'} render={() => {\r\n                            return <React.Suspense fallback={<Preloader isFetching={true}/>}>\r\n                                <DialogsContainer/>\r\n                            </React.Suspense>\r\n                        }}/>\r\n                        <Route path={'/profile/:userId?'} render={() => {\r\n                            return <React.Suspense fallback={<Preloader isFetching={true}/>}>\r\n                                <ProfileContainer/>\r\n                            </React.Suspense>\r\n                        }}/>\r\n                        <Route path={'/news'} render={() => <News/>}/>\r\n                        <Route path={'/music'} render={() => <Music/>}/>\r\n                        <Route path={'/settings'} render={() => <Settings/>}/>\r\n                        <Route path={'/users'} render={() => {\r\n                            return <React.Suspense fallback={<Preloader isFetching={true}/>}>\r\n                                <UsersContainer/>\r\n                            </React.Suspense>\r\n                        }}/>\r\n                        <Route path={'/login'} render={() => <LoginAPIComponent/>}/>\r\n                    </div>\r\n                </div>\r\n            </HashRouter>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        initialized: state.app.initialized\r\n    }\r\n}\r\nconst AppContainer = connect<MapStateToPropsType, MapDispatchToPropsType, {}, AppStateType>(mapStateToProps, {initializedApp})(App)\r\nexport const SamuraiJSApp = () => {\r\n    return <React.StrictMode>\r\n        <Provider store={store}>\r\n            <AppContainer/>\r\n        </Provider>\r\n    </React.StrictMode>\r\n}","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {SamuraiJSApp} from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\n\r\nReactDOM.render(\r\n    <SamuraiJSApp />,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/Rolling-1s-200px.2a7cbb7b.svg\";","import React from \"react\";\r\nimport preloader from \"../../../assets/images/Rolling-1s-200px.svg\";\r\n\r\ntype PreloaderType = {\r\n    isFetching: boolean\r\n}\r\n\r\nexport const Preloader: React.FC<PreloaderType> = ({isFetching}) => {\r\n    return <>\r\n        {isFetching ? <img src={preloader} alt={'loading...'}/> : null}\r\n    </>\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControl_formControl__1Tt0x\",\"error\":\"FormControl_error__3fzVh\",\"formSummaryError\":\"FormControl_formSummaryError__3p_RQ\"};","import React from \"react\";\r\nimport s from './FormControl.module.css'\r\n\r\nconst FormControl = ({input, meta: {touched, error}, ...props}: any) => {\r\n    const hasError = touched && error\r\n    return <div className={s.formControl + ' ' + (hasError ? s.error : '')}>\r\n        <div>\r\n            {props.children}\r\n        </div>\r\n        {hasError && <span>{error}</span>}\r\n    </div>\r\n}\r\nexport const Textarea = (props: any) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}>\r\n        <textarea {...input} {...restProps}/>\r\n    </FormControl>\r\n}\r\n\r\nexport const Input = (props: any) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}>\r\n        <input {...input} {...restProps}/>\r\n    </FormControl>\r\n}\r\n","export const required = (value: string) => {\r\n    if (value) {\r\n        return undefined\r\n    }\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxValue: number) => (value: string) => {\r\n    if (value && value.length > maxValue) {\r\n        return 'Max length is ' + maxValue + ' symbols'\r\n    }\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2hDlm\",\"loginBlock\":\"Header_loginBlock__2V-Dx\"};","import {profileAPI, usersAPI} from \"../api/api\";\r\nimport {Dispatch} from \"redux\";\r\n\r\ntype PostActionType = ReturnType<typeof postAdd>;\r\ntype SetUserProfileType = ReturnType<typeof setUserProfile>\r\ntype SetStatusProfileType = ReturnType<typeof setStatus>\r\ntype DeletePostActionType = ReturnType<typeof deletePost>\r\ntype OwnActionType =\r\n    PostActionType\r\n    | SetUserProfileType\r\n    | SetStatusProfileType\r\n    | DeletePostActionType\r\nexport type PostsType = {\r\n    id: number\r\n    message: string\r\n    likes: number\r\n};\r\nexport type InitialStateTypeProfilePageType = typeof initialState\r\ntype ContactsType = {\r\n    facebook: null | string\r\n    website: null | string\r\n    vk: null | string\r\n    twitter: null | string\r\n    instagram: null | string\r\n    youtube: null | string\r\n    github: null | string\r\n    mainLink: null | string\r\n}\r\ntype PhotoType = {\r\n    small: string\r\n    large: string\r\n}\r\nexport type ProfileStateType = {\r\n    aboutMe: string\r\n    contacts: ContactsType\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    fullName: string\r\n    userId: number\r\n    photos: PhotoType\r\n}\r\n\r\n\r\nconst initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likes: 3},\r\n        {id: 2, message: 'It\\'s my first post', likes: 6},\r\n        {id: 3, message: 'I like JS!!!', likes: 75},\r\n        {id: 4, message: 'Just, do it!!!', likes: 10}\r\n    ] as PostsType[],\r\n    profile: {} as ProfileStateType,\r\n    status: ''\r\n}\r\n\r\nconst profileReducer = (state: InitialStateTypeProfilePageType = initialState, action: OwnActionType): InitialStateTypeProfilePageType => {\r\n    switch (action.type) {\r\n        case 'social-network/profile-reducer/POST-ADD': {\r\n            const newPost: PostsType = {\r\n                id: new Date().getTime(),\r\n                message: action.value,\r\n                likes: 0\r\n            };\r\n            return {...state, posts: [...state.posts, newPost]};\r\n        }\r\n        case 'social-network/profile-reducer/SET-USER-PROFILE': {\r\n            return {...state, profile: action.profile};\r\n        }\r\n        case 'social-network/profile-reducer/SET-STATUS': {\r\n            return {...state, status: action.status};\r\n        }\r\n        case 'social-network/profile-reducer/POST-DELETE': {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(i => i.id !== action.postId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const postAdd = (value: string) => {\r\n    return {type: 'social-network/profile-reducer/POST-ADD', value} as const\r\n};\r\nexport const deletePost = (postId: number) => {\r\n    return {type: 'social-network/profile-reducer/POST-DELETE', postId} as const\r\n};\r\nexport const setUserProfile = (profile: ProfileStateType) => {\r\n    return {type: 'social-network/profile-reducer/SET-USER-PROFILE', profile} as const\r\n};\r\nexport const setStatus = (status: string) => {\r\n    return {type: 'social-network/profile-reducer/SET-STATUS', status} as const\r\n};\r\n\r\nexport const getUserProfile = (userId: number) => async (dispatch: Dispatch<OwnActionType>) => {\r\n    let response = await usersAPI.getProfile(userId)\r\n    dispatch(setUserProfile(response.data))\r\n}\r\nexport const getStatus = (userId: string) => async (dispatch: Dispatch<OwnActionType>) => {\r\n    let response = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(response.data))\r\n}\r\nexport const updateStatus = (status: string) => async (dispatch: Dispatch<OwnActionType>) => {\r\n    let response = await profileAPI.updateStatus(status)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status))\r\n    }\r\n}\r\n\r\nexport default profileReducer"],"sourceRoot":""}