{"version":3,"sources":["hoc/WithAuthRedirect.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","componets/Common/Paginator/Paginator.module.css","componets/Users/Users.module.css","Redux/users-selectors.ts","componets/Common/Paginator/Paginator.tsx","assets/images/5546667.png","componets/Users/User.tsx","componets/Users/Users.tsx","componets/Users/UsersContainer.tsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","data","WithAuthRedirect","Component","connect","props","restProps","to","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","getUsersPage","usersPage","getPageSize","pageSize","getTotalUsersCount","totalUsersCount","getCurrentPage","currentPage","getIsFetching","isFetching","getFollowingInProgress","followingInProgress","Paginator","totalItemsCount","onPageChanged","portionSize","pageCount","Math","ceil","pages","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","className","s","paginator","onClick","filter","p","map","selectedPage","User","userId","follow","followed","photoUrl","name","unfollow","status","item","src","userPhoto","alt","disabled","some","id","Users","usersCount","users","u","UsersAPIComponent","pageNumber","getUser","this","Preloader","React","compose","setCurrentPage"],"mappings":"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","file":"static/js/5.a8e52067.chunk.js","sourcesContent":["import React, {ComponentType} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {AppStateType} from \"../Redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\n\r\ntype MapStateToPropsForRedirectType = {\r\n    isAuth: boolean\r\n}\r\n\r\nconst mapStateToPropsForRedirect = (state: AppStateType): MapStateToPropsForRedirectType => ({\r\n    isAuth: state.auth.data.isAuth\r\n})\r\n\r\nexport function WithAuthRedirect<T>(Component: ComponentType<T>) {\r\n    function RedirectComponent(props: MapStateToPropsForRedirectType) {\r\n        let {isAuth, ...restProps} = props\r\n        if (!isAuth) return <Redirect to='/login'/>\r\n        return (\r\n            <Component {...restProps as T} />\r\n        );\r\n    }\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__35K-2\",\"paginator\":\"Paginator_paginator__1tbZr\",\"pageNumber\":\"Paginator_pageNumber__3hmPH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Users_item__2M_Bc\",\"message\":\"Users_message__1vOpI\"};","import {AppStateType} from \"./redux-store\";\r\nimport {InitialStateTypeUsersPage} from \"./users-reducer\";\r\n\r\n\r\nexport const getUsersPage = (state: AppStateType): InitialStateTypeUsersPage => {\r\n    return state.usersPage\r\n}\r\nexport const getPageSize = (state: AppStateType): number => {\r\n    return state.usersPage.pageSize\r\n}\r\nexport const getTotalUsersCount = (state: AppStateType): number => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\nexport const getCurrentPage = (state: AppStateType): number => {\r\n    return state.usersPage.currentPage\r\n}\r\nexport const getIsFetching = (state: AppStateType): boolean => {\r\n    return state.usersPage.isFetching\r\n}\r\nexport const getFollowingInProgress = (state: AppStateType): number[] => {\r\n    return state.usersPage.followingInProgress\r\n}","import s from \"./Paginator.module.css\";\r\nimport React, {useState} from \"react\";\r\n\r\ntype PaginatorPropsType = {\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    portionSize?: number\r\n}\r\n\r\n\r\nexport const Paginator: React.FC<PaginatorPropsType> = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n    let pageCount = Math.ceil(totalItemsCount / pageSize)\r\n    let pages = []\r\n    for (let i = 1; i <= pageCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    const portionCount = Math.ceil(pageCount / portionSize)\r\n    const [portionNumber, setPortionNumber] = useState<number>(1)\r\n    const leftPortionPageNumber =  (portionNumber - 1) * portionSize + 1\r\n    const rightPortionPageNumber = portionNumber * portionSize\r\n\r\n    return <div className={s.paginator}>\r\n        { portionNumber > 1 &&\r\n            <button onClick={ () => {setPortionNumber(portionNumber - 1)}}>PREV</button>\r\n\r\n        }\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n            .map((p) => {\r\n            return <span onClick={() => {\r\n                onPageChanged(p)\r\n            }} className={currentPage === p ? s.selectedPage : ''}>{p}</span>\r\n        })}\r\n        {portionCount > portionNumber &&\r\n        <button onClick={()=> {setPortionNumber(portionNumber + 1)}}>NEXT</button> }\r\n    </div>\r\n}","export default __webpack_public_path__ + \"static/media/5546667.a94eb87e.png\";","import s from \"./Users.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport userPhoto from \"../../assets/images/5546667.png\";\r\nimport React from \"react\";\r\n\r\ntype UserProps = {\r\n    userId: number\r\n    photoUrl: string\r\n    followed: boolean\r\n    followingInProgress: number[]\r\n    unfollow: (userId: number) => void\r\n    follow: (userId: number) => void\r\n    name: string\r\n    status: string\r\n\r\n}\r\n\r\n\r\nexport const User: React.FC<UserProps> = ({\r\n                                              userId,\r\n                                              follow,\r\n                                              followed,\r\n                                              followingInProgress,\r\n                                              photoUrl,\r\n                                              name,\r\n                                              unfollow,\r\n                                              status\r\n                                          }) => {\r\n    return <div>\r\n        <span>\r\n                        <div className={s.item}>\r\n                            <NavLink to={'/profile/' + userId}>\r\n                            <img src={photoUrl != null ? photoUrl : userPhoto}\r\n                                 alt=\"avatar\"/>\r\n                                </NavLink>\r\n                        </div>\r\n                        <div>\r\n                            {followed\r\n                                ? <button disabled={followingInProgress.some(id => id === userId)} onClick={() => {\r\n                                    unfollow(userId)\r\n                                }}>Unfollow</button>\r\n                                : <button disabled={followingInProgress.some(id => id === userId)} onClick={() => {\r\n                                    follow(userId)\r\n                                }}>Follow</button>}\r\n                        </div>\r\n                    </span>\r\n        <span>\r\n                        <span>\r\n                            <div>{name}</div>\r\n                            <div>{status}</div>\r\n                        </span>\r\n                        <span>\r\n                            <div>{\"u.location.country\"}</div>\r\n                            <div>{\"u.location.city\"}</div>\r\n                        </span>\r\n                    </span>\r\n    </div>\r\n\r\n}","import React from 'react'\r\nimport {InitialStateTypeUsersPage} from '../../Redux/users-reducer';\r\nimport {Paginator} from \"../Common/Paginator/Paginator\";\r\nimport {User} from \"./User\";\r\n\r\ntype UsersPageType = {\r\n    usersCount: number\r\n    pageSize: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    currentPage: number\r\n    unfollow: (userId: number) => void\r\n    follow: (userId: number) => void\r\n    usersPage: InitialStateTypeUsersPage\r\n    followingInProgress: number[]\r\n}\r\n\r\nexport const Users: React.FC<UsersPageType> = ({\r\n                                                   usersCount,\r\n                                                   pageSize,\r\n                                                   onPageChanged,\r\n                                                   currentPage,\r\n                                                   usersPage,\r\n                                                   followingInProgress,\r\n                                                   follow,\r\n                                                   unfollow\r\n                                               }) => {\r\n\r\n    return <div>\r\n        <Paginator totalItemsCount={usersCount}\r\n                   pageSize={pageSize}\r\n                   currentPage={currentPage}\r\n                   onPageChanged={onPageChanged}/>\r\n        {\r\n            usersPage.users.map(u => <User userId={u.id}\r\n                                           photoUrl={u.photoUrl}\r\n                                           followed={u.followed}\r\n                                           followingInProgress={followingInProgress}\r\n                                           unfollow={unfollow}\r\n                                           follow={follow}\r\n                                           name={u.name}\r\n                                           status={u.status}\r\n                                           key={u.id}\r\n                />\r\n            )\r\n        }\r\n    </div>;\r\n}","import {connect} from 'react-redux';\r\nimport {\r\n    follow, getUser,\r\n    InitialStateTypeUsersPage,\r\n    setCurrentPage,\r\n    unfollow\r\n} from '../../Redux/users-reducer';\r\nimport {AppStateType} from '../../Redux/redux-store';\r\nimport React from 'react';\r\nimport {Preloader} from \"../Common/Preloader/Preloader\";\r\nimport {compose} from 'redux';\r\nimport {\r\n    getCurrentPage, getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsersPage\r\n} from \"../../Redux/users-selectors\";\r\nimport {WithAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\nimport {Users} from \"./Users\";\r\n\r\ntype MapDispatchToPropsType = {\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    setCurrentPage: (currentPage: number) => void\r\n    getUser: (currentPage: number, pageSize: number) => void\r\n\r\n}\r\ntype MapStateToPropsType = {\r\n    usersPage: InitialStateTypeUsersPage\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: number[]\r\n}\r\ntype UsersAPIComponentType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nclass UsersAPIComponent extends React.Component<UsersAPIComponentType> {\r\n    componentDidMount() {\r\n        const {usersPage, pageSize} = this.props\r\n        this.props.getUser(usersPage.currentPage, pageSize)\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        const {pageSize} = this.props\r\n        this.props.getUser(pageNumber, pageSize)\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            <Preloader isFetching={this.props.usersPage.isFetching}/>\r\n            <Users usersCount={this.props.usersPage.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   onPageChanged={this.onPageChanged}\r\n                   currentPage={this.props.currentPage}\r\n                   unfollow={this.props.unfollow}\r\n                   follow={this.props.follow}\r\n                   usersPage={this.props.usersPage}\r\n                   followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        usersPage: getUsersPage(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    WithAuthRedirect,\r\n    connect<MapStateToPropsType, MapDispatchToPropsType, {}, AppStateType>(mapStateToProps, {\r\n        follow,\r\n        unfollow,\r\n        setCurrentPage,\r\n        getUser\r\n\r\n    })\r\n)(UsersAPIComponent)"],"sourceRoot":""}