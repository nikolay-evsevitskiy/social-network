{"version":3,"sources":["api/api.ts","Redux/dialogs-reducer.ts","utils/object-helper.ts","Redux/users-reducer.ts","componets/Common/Preloader/preloader.module.css","componets/Error404/Error404Component.module.css","componets/Navbar/Navbar.module.css","componets/Common/superButton/superButton.module.css","reportWebVitals.ts","index.tsx","componets/Common/navButton/navButton.module.css","componets/Common/FormsControls/FormsControls.tsx","componets/Common/FormsControls/FormControl.module.css","componets/Common/Preloader/PreloaderMan.tsx","componets/Common/Preloader/Preloader.tsx","componets/Header/Header.module.css","componets/Login/Login.module.css","componets/Common/Preloader/preloaderMan.module.scss","componets/Common/superButton/SuperButton.tsx","utils/validators/validators.ts","Redux/auth-reducer.ts","assets/images/logoSamurai2.1.png","componets/Header/Header.tsx","componets/Header/HeaderContainer.tsx","componets/Login/Login.tsx","Redux/app-reducer.ts","Redux/sidebar-reducer.ts","Redux/redux-store.ts","componets/Common/navButton/NavButton.tsx","componets/Navbar/Navbar.tsx","componets/News/News.tsx","componets/Music/Music.tsx","componets/Setting/Settings.tsx","componets/Error404/Error404Component.tsx","App.tsx","Redux/profile-reducer.ts"],"names":["instance","axios","create","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","unfollow","id","delete","follow","post","getProfile","userID","profileAPI","authAPI","me","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaUrl","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","saveProfile","value","initialState","dialogs","name","messages","message","addMessageActionCreator","newMessage","type","dialogPageReducer","state","action","newText","Date","getTime","UpdateObjectInArray","items","itemId","newObjectProps","map","t","users","totalUsersCount","isFetching","followingInProgress","followSuccess","userId","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleIsFollowingProgress","getUser","dispatch","a","totalCount","followUnfollowFlow","apiMethod","actionCreator","resultCode","bind","usersReducer","followed","filter","module","exports","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","FormControl","input","meta","touched","error","props","hasError","className","s","formControl","children","Textarea","restProps","child","Input","PreloaderMan","style","body","base","face","longfazers","Preloader","preloader","SuperButton","red","fulClassName","button","yellow","green","blue","required","maxLengthCreator","maxValue","length","logIn","isAuth","captchaUrl","getCaptchaUrlSuccess","setAuthUserData","payload","getAuthUserData","url","authReducer","Header","header","logo","src","alt","title","loginBlock","onClick","HeaderContainer","this","React","Component","connect","auth","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","Field","component","validate","placeholder","inputText","rememberMeBlock","formSummaryError","LoginAPIComponent","stopSubmit","_error","to","PATH","PROFILE","mainContainer","initialized","appReducer","sidebarReducer","rootReducer","combineReducers","profilePage","profileReducer","dialogPage","sideBar","usersPage","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","NavButton","navButtonName","wrapper","cta","width","height","viewBox","version","xmlns","stroke","fill","one","d","two","three","Navbar","nav","item","active","DIALOGS","NEWS","MUSIC","SETTINGS","USERS","News","Music","Settings","Error404Component","main","DialogsContainer","lazy","ProfileContainer","UsersContainer","LOGIN","App","catchAllUnhandledErrors","promiseRejectionEvent","alert","initializedApp","addEventListener","removeEventListener","exact","path","Suspense","fallback","AppContainer","SamuraiJSApp","StrictMode","posts","likes","profile","profileUpdateStatus","postAdd","setStatus","ProfileUpdateStatus","getUserProfile","file","photo","getState","newPost","i","postId","photos"],"mappings":"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","file":"static/js/main.c14a784d.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport {ProfileStateType} from \"../Redux/profile-reducer\";\r\nimport {FormDataType} from \"../componets/Profile/ProfileInfo/ProfiledataForm\";\r\n\r\nexport type FollowType = {\r\n    data: {}\r\n    fieldsErrors: []\r\n    messages: []\r\n    resultCode: 0 | 1\r\n}\r\ntype getUsersType = {\r\n    error: null | string\r\n    items: [ItemGetUsersType]\r\n    totalCount: number\r\n}\r\nexport type ItemGetUsersType = {\r\n    followed: boolean\r\n    id: number\r\n    name: string\r\n    photos: PhotoType\r\n    status?: string\r\n    uniqueUrlName?: string\r\n}\r\nexport type PhotoType = {\r\n    small?: string\r\n    large?: string\r\n}\r\ntype updateStatusType = {\r\n    resultCode: number\r\n    messages: [string]\r\n    data: {}\r\n}\r\ntype loginDataType = {\r\n    resultCode: number\r\n    messages: [],\r\n    data: {\r\n        userId: number\r\n    }\r\n}\r\ntype logoutDataType = {\r\n    resultCode: number\r\n    messages: [],\r\n    data: {}\r\n}\r\n\r\ntype authMeDataType = {\r\n    resultCode: number\r\n    messages: []\r\n    data: {\r\n        id: number\r\n        email: string\r\n        login: string\r\n    }\r\n}\r\ntype SavePhotoStateType = {\r\n    data: {\r\n        small: string,\r\n        large: string\r\n    }\r\n    resultCode: number\r\n    messages: [string]\r\n}\r\ntype SaveProfileType = {\r\n    resultCode: number\r\n    messages: [string],\r\n    data: {}\r\n}\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': '4bd60911-e7ab-47b0-851f-962a07b6cbc2'\r\n    }\r\n})\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage: number = 1, pageSize: number = 10) {\r\n        return instance.get<getUsersType>(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data)\r\n    },\r\n    unfollow(id: number) {\r\n        return instance.delete<FollowType>(`follow/${id}`)\r\n            .then(response => response.data)\r\n    },\r\n    follow(id: number) {\r\n        return instance.post<FollowType>(`follow/${id}`, {})\r\n            .then(response => response.data)\r\n    },\r\n    getProfile(userID: number | null) {\r\n        return profileAPI.getProfile(userID)\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n\r\n    me() {\r\n        return instance.get<authMeDataType>(`auth/me`, {\r\n            withCredentials: true\r\n        })\r\n    },\r\n    login(email: string, password: string, rememberMe: boolean = false, captcha: string | null = null) {\r\n        return instance.post<loginDataType>(`auth/login`, {email, password, rememberMe, captcha})\r\n    },\r\n    logout() {\r\n        return instance.delete<logoutDataType>(`auth/login`)\r\n    }\r\n\r\n}\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get<{url: string}>(`security/get-captcha-url`)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userID: number | null) {\r\n        return instance.get<ProfileStateType>(`profile/${userID}`)\r\n    },\r\n    getStatus(userID: string) {\r\n        return instance.get<string>(`profile/status/${userID}`)\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put<updateStatusType>(`profile/status`, {status: status})\r\n    },\r\n    savePhoto(photoFile: any) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile)\r\n        return instance.put<SavePhotoStateType>(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    },\r\n    saveProfile(value: FormDataType) {\r\n        return instance.put<SaveProfileType>(`profile`, value)\r\n    }\r\n}\r\n\r\n","export type MessagesType = {\r\n    id: number\r\n    message: string\r\n};\r\nexport type DialogsType = {\r\n    id: number\r\n    name: string\r\n};\r\ntype MessageActionType = ReturnType<typeof addMessageActionCreator>;\r\n\r\nexport type InitialStateTypeDialogsPage = typeof initialState\r\n\r\nconst initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Mark'},\r\n        {id: 2, name: 'Miron'},\r\n        {id: 3, name: 'Vadim'},\r\n        {id: 4, name: 'Milana'},\r\n        {id: 5, name: 'Polina'}\r\n    ] as DialogsType[],\r\n    messages: [\r\n        {id: 1, message: 'Hi!'},\r\n        {id: 2, message: 'How are you?'},\r\n        {id: 3, message: 'Cool!!!'}\r\n    ] as MessagesType[]\r\n}\r\n\r\nconst dialogPageReducer = (state: InitialStateTypeDialogsPage = initialState, action: MessageActionType): InitialStateTypeDialogsPage => {\r\n    switch (action.type) {\r\n        case 'social-network/dialogs-reducer/ADD-MESSAGE': {\r\n            const newText: MessagesType = {\r\n                id: new Date().getTime(),\r\n                message: action.newMessage\r\n            };\r\n            return {...state, messages: [...state.messages, newText]};\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addMessageActionCreator = (newMessage: string) => {\r\n    return {type: \"social-network/dialogs-reducer/ADD-MESSAGE\", newMessage} as const\r\n};\r\n\r\nexport default dialogPageReducer","import {ItemGetUsersType} from \"../api/api\";\r\n\r\nexport const UpdateObjectInArray = (items: Array<ItemGetUsersType>, itemId: number, newObjectProps: {}) => {\r\n    return items.map(t => {\r\n        if (t.id === itemId) {\r\n            return {...t, ...newObjectProps}\r\n        }\r\n        return t;\r\n    })\r\n\r\n}","import {FollowType, ItemGetUsersType, usersAPI} from \"../api/api\";\r\nimport {Dispatch} from \"redux\";\r\nimport {UpdateObjectInArray} from \"../utils/object-helper\";\r\n\r\ntype FollowActionType = ReturnType<typeof followSuccess>\r\ntype UnfollowActionType = ReturnType<typeof unfollowSuccess>\r\ntype UsersActionType = ReturnType<typeof setUsers>\r\ntype SetCurrentPageType = ReturnType<typeof setCurrentPage>\r\ntype SetTotalUserCountType = ReturnType<typeof setTotalUserCount>\r\ntype ToggleIsFetchingType = ReturnType<typeof toggleIsFetching>\r\ntype ToggleIsFollowingProgress = ReturnType<typeof toggleIsFollowingProgress>\r\ntype ActionType =\r\n    FollowActionType\r\n    | UnfollowActionType\r\n    | UsersActionType\r\n    | SetCurrentPageType\r\n    | SetTotalUserCountType\r\n    | ToggleIsFetchingType\r\n    | ToggleIsFollowingProgress\r\n\r\nexport type InitialStateTypeUsersPage = {\r\n    users: Array<ItemGetUsersType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: number[]\r\n}\r\n\r\n\r\nconst initialState: InitialStateTypeUsersPage = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n}\r\n\r\nconst usersReducer = (state: InitialStateTypeUsersPage = initialState, action: ActionType): InitialStateTypeUsersPage => {\r\n    switch (action.type) {\r\n        case 'social-network/users-reducer/FOLLOW':\r\n            return {\r\n                ...state,\r\n                users: UpdateObjectInArray(state.users, action.userId, {followed: true})\r\n            }\r\n        case 'social-network/users-reducer/UNFOLLOW':\r\n            return {\r\n                ...state,\r\n                users: UpdateObjectInArray(state.users, action.userId, {followed: false})\r\n            }\r\n        case 'social-network/users-reducer/SET-USERS':\r\n            return {\r\n                ...state,\r\n                users: [...action.users]\r\n            }\r\n        case 'social-network/users-reducer/SET-CURRENT-PAGE':\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        case 'social-network/users-reducer/SET-TOTAL-USER-COUNT':\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalCount\r\n            }\r\n        case 'social-network/users-reducer/TOGGLE-IS-FETCHING':\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case 'social-network/users-reducer/TOGGLE-IS-FOLLOWING-PROGRESS':\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.followingInProgress\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const followSuccess = (userId: number) => {\r\n    return {type: 'social-network/users-reducer/FOLLOW', userId} as const\r\n};\r\nexport const unfollowSuccess = (userId: number) => {\r\n    return {type: 'social-network/users-reducer/UNFOLLOW', userId} as const\r\n};\r\nexport const setUsers = (users: ItemGetUsersType[]) => {\r\n    return {type: 'social-network/users-reducer/SET-USERS', users} as const\r\n};\r\nexport const setCurrentPage = (currentPage: number) => {\r\n    return {type: 'social-network/users-reducer/SET-CURRENT-PAGE', currentPage} as const\r\n}\r\nexport const setTotalUserCount = (totalCount: number) => {\r\n    return {type: 'social-network/users-reducer/SET-TOTAL-USER-COUNT', totalCount} as const\r\n}\r\nexport const toggleIsFetching = (isFetching: boolean) => {\r\n    return {type: 'social-network/users-reducer/TOGGLE-IS-FETCHING', isFetching} as const\r\n}\r\nexport const toggleIsFollowingProgress = (userId: number, followingInProgress: boolean) => {\r\n    return {type: 'social-network/users-reducer/TOGGLE-IS-FOLLOWING-PROGRESS', followingInProgress, userId} as const\r\n}\r\n\r\nexport const getUser = (currentPage: number, pageSize: number) => async (dispatch: Dispatch) => {\r\n    dispatch(toggleIsFetching(true))\r\n    dispatch(setCurrentPage(currentPage))\r\n    let response = await usersAPI.getUsers(currentPage, pageSize)\r\n    dispatch(toggleIsFetching(false))\r\n    dispatch(setUsers(response.items))\r\n    dispatch(setTotalUserCount(response.totalCount))\r\n}\r\ntype ActionCreatorFollowUnfollowType = (userId: number) => FollowActionType | UnfollowActionType\r\ntype ApiMethodType = (id: number) => Promise<FollowType>\r\n\r\nconst followUnfollowFlow = async (userId: number, dispatch: Dispatch, apiMethod: ApiMethodType, actionCreator: ActionCreatorFollowUnfollowType) => {\r\n    dispatch(toggleIsFollowingProgress(userId, true))\r\n    let response = await apiMethod(userId)\r\n    if (response.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleIsFollowingProgress(userId, false))\r\n\r\n}\r\n\r\nexport const follow = (userId: number) => async (dispatch: any) => {\r\n    await followUnfollowFlow(userId, dispatch, usersAPI.follow.bind(usersAPI), followSuccess)\r\n}\r\n\r\nexport const unfollow = (userId: number) => async (dispatch: any) => {\r\n    await followUnfollowFlow(userId, dispatch, usersAPI.unfollow.bind(usersAPI), unfollowSuccess)\r\n}\r\n\r\nexport default usersReducer","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"preloader_preloader__2YGw-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Error404Component_main__L0PTo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__20N92\",\"item\":\"Navbar_item__2V96j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"superButton_button__sRUkH\",\"blue\":\"superButton_blue__2QGuO\",\"red\":\"superButton_red__3gw4-\",\"green\":\"superButton_green__2-tUK\",\"yellow\":\"superButton_yellow__3ts9O\",\"animation\":\"superButton_animation__2b7Aa\"};","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {SamuraiJSApp} from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\n\r\nReactDOM.render(\r\n    <HashRouter>\r\n        <SamuraiJSApp/>\r\n    </HashRouter>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"navButton_wrapper__2bs4X\",\"cta\":\"navButton_cta__28e60\",\"one\":\"navButton_one__20M8x\",\"two\":\"navButton_two__3-42W\",\"three\":\"navButton_three__3Eq6y\",\"color_anim\":\"navButton_color_anim__3D4rv\"};","import React from \"react\";\r\nimport s from './FormControl.module.css'\r\n\r\nconst FormControl = ({input, meta: {touched, error}, ...props}: any) => {\r\n    const hasError = touched && error\r\n    return <div className={s.formControl + ' ' + (hasError ? s.error : '')}>\r\n        <div>\r\n            {props.children}\r\n        </div>\r\n        {hasError && <span>{error}</span>}\r\n    </div>\r\n}\r\nexport const Textarea = (props: any) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}>\r\n        <textarea {...input} {...restProps}/>\r\n    </FormControl>\r\n}\r\n\r\nexport const Input = (props: any) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}>\r\n        <input {...input} {...restProps}/>\r\n    </FormControl>\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControl_formControl__1Tt0x\",\"error\":\"FormControl_error__3fzVh\",\"formSummaryError\":\"FormControl_formSummaryError__3p_RQ\"};","import React from \"react\";\r\nimport style from \"./preloaderMan.module.scss\"\r\n\r\n\r\n\r\nexport const PreloaderMan = () => {\r\n\r\n    return <>\r\n        <div className={style.body}>\r\n  <span>\r\n    <span></span>\r\n    <span></span>\r\n    <span></span>\r\n    <span></span>\r\n  </span>\r\n            <div className={style.base}>\r\n                <span></span>\r\n                <div className={style.face}></div>\r\n            </div>\r\n        </div>\r\n        <div className={style.longfazers}>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n        </div>\r\n\r\n    </>}\r\n\r\n","import React from \"react\";\r\nimport preloader from \"../../../assets/images/Rolling-1s-200px.svg\";\r\nimport style from \"./preloader.module.css\";\r\nimport {PreloaderMan} from \"./PreloaderMan\";\r\n\r\ntype PreloaderType = {\r\n    isFetching: boolean\r\n}\r\n\r\nexport const Preloader: React.FC<PreloaderType> = ({isFetching}) => {\r\n    return <div className={style.preloader}>\r\n        {/*{isFetching ? <img src={preloader} alt={'loading...'}/> : null}*/}\r\n        {isFetching ? <PreloaderMan/> : null}\r\n    </div>\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2hDlm\",\"logo\":\"Header_logo__1V1CO\",\"loginBlock\":\"Header_loginBlock__2V-Dx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"Login_mainContainer__3oeNp\",\"inputText\":\"Login_inputText__18Hm_\",\"rememberMeBlock\":\"Login_rememberMeBlock__3Yho5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"preloaderMan_body__3avew\",\"speeder\":\"preloaderMan_speeder__30ZXa\",\"base\":\"preloaderMan_base__32dq7\",\"face\":\"preloaderMan_face__3Fl__\",\"fazer1\":\"preloaderMan_fazer1__3IE25\",\"fazer2\":\"preloaderMan_fazer2__WLhsV\",\"fazer3\":\"preloaderMan_fazer3__OdBM_\",\"fazer4\":\"preloaderMan_fazer4__3PtUO\",\"longfazers\":\"preloaderMan_longfazers__241jg\",\"lf\":\"preloaderMan_lf__2Yybp\",\"lf2\":\"preloaderMan_lf2__3xi3a\",\"lf3\":\"preloaderMan_lf3__3p-4q\",\"lf4\":\"preloaderMan_lf4__1_K7K\"};","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './superButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const fulClassName = className === \"red\" ? `${s.button} ${s.red}` :\n        className === \"yellow\" ? `${s.button} ${s.yellow}` :\n            className === \"green\" ? `${s.button} ${s.green}` :\n                `${s.button} ${s.blue}`\n\n    return (\n        <button\n            className={fulClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","export const required = (value: string) => {\r\n    if (value) {\r\n        return undefined\r\n    }\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxValue: number) => (value: string) => {\r\n    if (value && value.length > maxValue) {\r\n        return 'Max length is ' + maxValue + ' symbols'\r\n    }\r\n    return undefined;\r\n}","import {authAPI, securityAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {Dispatch} from \"redux\";\r\n\r\ntype SetUserDataType = ReturnType<typeof setAuthUserData>\r\nexport type GetAuthUserDataType = ReturnType<typeof getAuthUserData>\r\nexport type GetCaptchaUrlActionType = ReturnType<typeof getCaptchaUrlSuccess>\r\n\r\n\r\ntype ActionType = SetUserDataType | GetCaptchaUrlActionType\r\nexport type InitialStateAuthDataType = {\r\n    data: {\r\n        id: number | null\r\n        email: string | null\r\n        logIn: string | null\r\n        isAuth: boolean\r\n        captchaUrl?: string | null\r\n    }\r\n}\r\n\r\nconst initialState: InitialStateAuthDataType = {\r\n    data: {\r\n        email: null,\r\n        id: null,\r\n        logIn: null,\r\n        isAuth: false,\r\n        captchaUrl: null\r\n    }\r\n}\r\n\r\nconst authReducer = (state: InitialStateAuthDataType = initialState, action: ActionType): InitialStateAuthDataType => {\r\n    switch (action.type) {\r\n        case 'social-network/auth-reducer/SET-USER-DATA':\r\n            return {\r\n                ...state,\r\n                data: {...action.payload},\r\n            }\r\n        case \"social-network/auth-reducer/GET-CAPTCHA-URL-SUCCESS\":\r\n            return {...state, data: {...state.data, captchaUrl: action.captchaUrl}}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n//action\r\nconst getCaptchaUrlSuccess = (captchaUrl: string) => {\r\n    return {type: \"social-network/auth-reducer/GET-CAPTCHA-URL-SUCCESS\", captchaUrl} as const\r\n}\r\nconst setAuthUserData = (email: string | null, id: number | null, logIn: string | null, isAuth: boolean) => {\r\n    return {type: 'social-network/auth-reducer/SET-USER-DATA', payload: {email, id, logIn, isAuth}} as const\r\n}\r\n//thunk\r\nexport const getAuthUserData = () => async (dispatch: Dispatch<ActionType>) => {\r\n    const response = await authAPI.me()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(response.data.data.email, response.data.data.id, response.data.data.login, true))\r\n    }\r\n};\r\nexport const login = (email: string, password: string, rememberMe: boolean, captcha: string | null | undefined) => async (dispatch: Dispatch<any>) => {\r\n    let response = await authAPI.login(email, password, rememberMe, captcha)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        if (response.data.resultCode === 10) {\r\n            dispatch(getCaptchaUrl())\r\n        }\r\n        const message = response.data.messages.length > 0 ? response.data.messages : 'Some error';\r\n        dispatch(stopSubmit('login', {_error: message}))\r\n    }\r\n};\r\nexport const getCaptchaUrl = () => async (dispatch: Dispatch<any>) => {\r\n    const response = await securityAPI.getCaptchaUrl()\r\n    const captchaUrl = response.data.url\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl))\r\n};\r\n\r\nexport const logout = () => async (dispatch: Dispatch<ActionType>) => {\r\n    const response = await authAPI.logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n};\r\n\r\nexport default authReducer;","export default __webpack_public_path__ + \"static/media/logoSamurai2.1.b652346f.png\";","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport logo from '../../assets/images/logoSamurai2.1.png'\r\nimport SuperButton from \"../Common/superButton/SuperButton\";\r\n\r\n\r\ntype HeaderType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n    logout: () => void\r\n}\r\n\r\nexport const Header: React.FC<HeaderType> = ({isAuth, login, logout}) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <div className={s.logo}>\r\n                <img src={logo}\r\n                     alt=\"social network\"/>\r\n            </div>\r\n            <div className={s.title}>\r\n                <h1>Samurai Social Network</h1>\r\n            </div>\r\n            {isAuth ? <div className={s.loginBlock}>\r\n                    <div>{login} </div>\r\n                    <SuperButton onClick={logout} className={\"red\"}>Log out</SuperButton></div> :\r\n                <></>}\r\n        </header>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {logout} from \"../../Redux/auth-reducer\";\r\nimport {connect} from 'react-redux';\r\nimport {AppStateType} from \"../../Redux/redux-store\";\r\nimport {Header} from \"./Header\";\r\n\r\ntype MapStateToPropsType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n}\r\ntype MapDispatchToPropsType = {\r\n    logout: () => void\r\n}\r\n\r\ntype HeaderContainerType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nclass HeaderContainer extends React.Component<HeaderContainerType> {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Header isAuth={this.props.isAuth} login={this.props.login} logout={this.props.logout}/>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => ({\r\n    isAuth: state.auth.data.isAuth,\r\n    login: state.auth.data.logIn\r\n})\r\n\r\nexport default connect<MapStateToPropsType, MapDispatchToPropsType, {}, AppStateType>(mapStateToProps, {logout})(HeaderContainer);\r\n","import React from \"react\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../Common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../Redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {AppStateType} from \"../../Redux/redux-store\";\r\nimport s from '../Common/FormsControls/FormControl.module.css'\r\nimport {PATH} from \"../../App\";\r\nimport style from \"./Login.module.css\"\r\nimport SuperButton from \"../Common/superButton/SuperButton\";\r\n\r\ntype mapDispatchToPropsType = {\r\n    login: (email: string, password: string, rememberMe: boolean, captcha: string | null | undefined) => void\r\n}\r\ntype MapStateToPropsType = {\r\n    isAuth: boolean\r\n    captchaUrl: string | null | undefined\r\n}\r\n\r\ntype FormDataType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    captcha?: string\r\n}\r\ntype CaptchaPropsType = { captchaUrl: string | null | undefined }\r\nexport const LoginForm: React.FC<InjectedFormProps<FormDataType, CaptchaPropsType> & CaptchaPropsType> =\r\n    ({handleSubmit, error, captchaUrl}) => {\r\n        return <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <Field component={Input}\r\n                       validate={[required]}\r\n                       type='text'\r\n                       name={'email'}\r\n                       placeholder={'Email'}\r\n                       className={style.inputText}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Field component={Input}\r\n                       validate={[required]}\r\n                       type='password'\r\n                       name={'password'}\r\n                       placeholder={'Password'}\r\n                       className={style.inputText}\r\n                />\r\n\r\n            </div>\r\n            <div className={style.rememberMeBlock}>\r\n                <Field component={Input}\r\n                       type='checkbox'\r\n                       name={'rememberMe'}/>\r\n                <div>\r\n                    remember me\r\n                </div>\r\n            </div>\r\n            {captchaUrl && <img alt={\"captcha\"} src={captchaUrl}/>}\r\n            {captchaUrl && <Field component={Input}\r\n                                  validate={[required]}\r\n                                  type='text'\r\n                                  name={'captcha'}\r\n                                  placeholder={'Symbols from image'}/>\r\n            }\r\n            {error && <div className={s.formSummaryError}>{error}</div>}\r\n            <div>\r\n                <SuperButton className={\"green\"}>\r\n                    Login\r\n                </SuperButton>\r\n            </div>\r\n        </form>\r\n    }\r\nconst LoginReduxForm = reduxForm<FormDataType, CaptchaPropsType>({form: 'login'})(LoginForm)\r\n\r\n\r\nexport const Login = (props: MapStateToPropsType & mapDispatchToPropsType) => {\r\n    const onSubmit = (formData: FormDataType) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n    }\r\n    if (props.isAuth) {\r\n        return <Redirect to={PATH.PROFILE}/>\r\n    }\r\n    return <div className={style.mainContainer}>\r\n        <h1>LOGIN</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        captchaUrl: state.auth.data.captchaUrl,\r\n        isAuth: state.auth.data.isAuth\r\n    }\r\n}\r\n\r\nexport const LoginAPIComponent = connect<MapStateToPropsType, mapDispatchToPropsType, {}, AppStateType>(mapStateToProps, {login})(Login)\r\n\r\n\r\n","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\n\r\ntype InitializedSuccessType = ReturnType<typeof initializedSuccessAC>\r\ntype ActionType = InitializedSuccessType\r\nexport type InitialStateType = {\r\n    initialized: boolean\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'social-network/app-reducer/INITIALIZED-SUCCESS':\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst initializedSuccessAC = () => {\r\n    return {type: 'social-network/app-reducer/INITIALIZED-SUCCESS'} as const\r\n}\r\n\r\nexport const initializedApp = () => (dispatch: any) => {\r\n    dispatch(getAuthUserData())\r\n        .then(() => {\r\n            dispatch(initializedSuccessAC())\r\n        })\r\n\r\n\r\n};\r\n\r\n\r\nexport default appReducer","let initialState = {};\r\n\r\n\r\nconst sidebarReducer = (state: any = initialState, action: any) => {\r\n\r\n    return state;\r\n};\r\n\r\nexport default sidebarReducer","import {combineReducers, compose} from 'redux';\r\nimport {createStore} from 'redux';\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogPageReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport {applyMiddleware} from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogPage: dialogPageReducer,\r\n    sideBar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n})\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n\r\nconst composeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)))\r\n\r\n// export const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\n","import React, {FC} from 'react';\r\nimport s from \"./navButton.module.css\"\r\n\r\ntype NavButtonType = {\r\n    navButtonName: string\r\n}\r\n\r\nconst NavButton: React.FC<NavButtonType> = ({navButtonName}) => {\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div className={s.cta}>\r\n                <span>{navButtonName}</span>\r\n                <span>\r\n      <svg width=\"46px\" height=\"43px\" viewBox=\"0 0 66 43\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <g id=\"arrow\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\r\n          <path className={s.one}\r\n                d=\"M40.1543933,3.89485454 L43.9763149,0.139296592 C44.1708311,-0.0518420739 44.4826329,-0.0518571125 44.6771675,0.139262789 L65.6916134,20.7848311 C66.0855801,21.1718824 66.0911863,21.8050225 65.704135,22.1989893 C65.7000188,22.2031791 65.6958657,22.2073326 65.6916762,22.2114492 L44.677098,42.8607841 C44.4825957,43.0519059 44.1708242,43.0519358 43.9762853,42.8608513 L40.1545186,39.1069479 C39.9575152,38.9134427 39.9546793,38.5968729 40.1481845,38.3998695 C40.1502893,38.3977268 40.1524132,38.395603 40.1545562,38.3934985 L56.9937789,21.8567812 C57.1908028,21.6632968 57.193672,21.3467273 57.0001876,21.1497035 C56.9980647,21.1475418 56.9959223,21.1453995 56.9937605,21.1432767 L40.1545208,4.60825197 C39.9574869,4.41477773 39.9546013,4.09820839 40.1480756,3.90117456 C40.1501626,3.89904911 40.1522686,3.89694235 40.1543933,3.89485454 Z\"\r\n                fill=\"#FFFFFF\"></path>\r\n          <path className={s.two}\r\n                d=\"M20.1543933,3.89485454 L23.9763149,0.139296592 C24.1708311,-0.0518420739 24.4826329,-0.0518571125 24.6771675,0.139262789 L45.6916134,20.7848311 C46.0855801,21.1718824 46.0911863,21.8050225 45.704135,22.1989893 C45.7000188,22.2031791 45.6958657,22.2073326 45.6916762,22.2114492 L24.677098,42.8607841 C24.4825957,43.0519059 24.1708242,43.0519358 23.9762853,42.8608513 L20.1545186,39.1069479 C19.9575152,38.9134427 19.9546793,38.5968729 20.1481845,38.3998695 C20.1502893,38.3977268 20.1524132,38.395603 20.1545562,38.3934985 L36.9937789,21.8567812 C37.1908028,21.6632968 37.193672,21.3467273 37.0001876,21.1497035 C36.9980647,21.1475418 36.9959223,21.1453995 36.9937605,21.1432767 L20.1545208,4.60825197 C19.9574869,4.41477773 19.9546013,4.09820839 20.1480756,3.90117456 C20.1501626,3.89904911 20.1522686,3.89694235 20.1543933,3.89485454 Z\"\r\n                fill=\"#FFFFFF\"></path>\r\n          <path className={s.three}\r\n                d=\"M0.154393339,3.89485454 L3.97631488,0.139296592 C4.17083111,-0.0518420739 4.48263286,-0.0518571125 4.67716753,0.139262789 L25.6916134,20.7848311 C26.0855801,21.1718824 26.0911863,21.8050225 25.704135,22.1989893 C25.7000188,22.2031791 25.6958657,22.2073326 25.6916762,22.2114492 L4.67709797,42.8607841 C4.48259567,43.0519059 4.17082418,43.0519358 3.97628526,42.8608513 L0.154518591,39.1069479 C-0.0424848215,38.9134427 -0.0453206733,38.5968729 0.148184538,38.3998695 C0.150289256,38.3977268 0.152413239,38.395603 0.154556228,38.3934985 L16.9937789,21.8567812 C17.1908028,21.6632968 17.193672,21.3467273 17.0001876,21.1497035 C16.9980647,21.1475418 16.9959223,21.1453995 16.9937605,21.1432767 L0.15452076,4.60825197 C-0.0425130651,4.41477773 -0.0453986756,4.09820839 0.148075568,3.90117456 C0.150162624,3.89904911 0.152268631,3.89694235 0.154393339,3.89485454 Z\"\r\n                fill=\"#FFFFFF\"></path>\r\n        </g>\r\n      </svg>\r\n    </span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NavButton;\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport s from './Navbar.module.css';\r\nimport NavButton from \"../Common/navButton/NavButton\";\r\nimport {PATH} from \"../../App\";\r\n\r\nexport const Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <Link to={PATH.PROFILE} className={s.active}><NavButton navButtonName={\"PROFILE\"}/></Link>\r\n            </div>\r\n            <div className={s.item}>\r\n                <Link to={PATH.DIALOGS} className={s.active}><NavButton navButtonName={\"MESSAGES\"}/></Link>\r\n            </div>\r\n            <div className={s.item}>\r\n                <Link to={PATH.NEWS} className={s.active}><NavButton navButtonName={\"NEWS\"}/></Link>\r\n            </div>\r\n            <div className={s.item}>\r\n                <Link to={PATH.MUSIC} className={s.active}><NavButton navButtonName={\"MUSIC\"}/></Link>\r\n            </div>\r\n            <div className={s.item}>\r\n                <Link to={PATH.SETTINGS} className={s.active}><NavButton navButtonName={\"SETTINGS\"}/></Link>\r\n            </div>\r\n            <div className={s.item}>\r\n                <Link to={PATH.USERS} className={s.active}><NavButton navButtonName={\"USERS\"}/></Link>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nexport const News = () => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport const Music = () => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport const Settings = () =>  {\r\n    return(\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport style from './Error404Component.module.css'\r\n\r\nconst Error404Component = () => {\r\n    return (\r\n        <div className={style.main}>\r\n            <h2> Error 404</h2>\r\n            <h2>PAGE IS NOT FOUND!!!</h2>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Error404Component;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport HeaderContainer from \"./componets/Header/HeaderContainer\";\r\nimport {LoginAPIComponent} from \"./componets/Login/Login\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {initializedApp} from \"./Redux/app-reducer\";\r\nimport {AppStateType, store} from \"./Redux/redux-store\";\r\nimport {Preloader} from \"./componets/Common/Preloader/Preloader\";\r\nimport {Navbar} from \"./componets/Navbar/Navbar\";\r\nimport {News} from \"./componets/News/News\";\r\nimport {Music} from \"./componets/Music/Music\";\r\nimport {Settings} from \"./componets/Setting/Settings\";\r\nimport {Redirect, Route, Switch} from 'react-router-dom';\r\nimport Error404Component from \"./componets/Error404/Error404Component\";\r\n\r\nconst DialogsContainer = React.lazy(() => import('./componets/Dialogs/DialogsContainer'))\r\nconst ProfileContainer = React.lazy(() => import('./componets/Profile/ProfileContainer'))\r\nconst UsersContainer = React.lazy(() => import('./componets/Users/UsersContainer'))\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    initialized: boolean\r\n}\r\ntype MapDispatchToPropsType = {\r\n    initializedApp: () => void\r\n}\r\ntype AppComponentType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nexport const PATH = {\r\n    PROFILE: \"/profile\",\r\n    DIALOGS: \"/dialogs\",\r\n    SETTINGS: \"/settings\",\r\n    MUSIC: \"/music\",\r\n    USERS: \"/users\",\r\n    NEWS: \"/news\",\r\n    LOGIN: \"/login\"\r\n}\r\n\r\n\r\nclass App extends React.Component<AppComponentType> {\r\n    catchAllUnhandledErrors = (promiseRejectionEvent: any) => {\r\n        alert(promiseRejectionEvent)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.initializedApp()\r\n        window.addEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors)\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader isFetching={true}/>\r\n        }\r\n        return (\r\n            <div className='app-wrapper'>\r\n                <HeaderContainer/>\r\n                <div className='main-container'>\r\n                    <Navbar/>\r\n                    <div className='app-wrapper-content'>\r\n                        <Switch>\r\n                            <Route exact path={'/'} render={() => <Redirect to={PATH.PROFILE}/>}/>\r\n                            <Route path={PATH.DIALOGS} render={() => {\r\n                                return <React.Suspense fallback={<Preloader isFetching={true}/>}>\r\n                                    <DialogsContainer/>\r\n                                </React.Suspense>\r\n                            }}/>\r\n                            <Route path={'/profile/:userId?'} render={() => {\r\n                                return <React.Suspense fallback={<Preloader isFetching={true}/>}>\r\n                                    <ProfileContainer/>\r\n                                </React.Suspense>\r\n                            }}/>\r\n                            <Route path={PATH.NEWS} render={() => <News/>}/>\r\n                            <Route path={PATH.MUSIC} render={() => <Music/>}/>\r\n                            <Route path={PATH.SETTINGS} render={() => <Settings/>}/>\r\n                            <Route path={PATH.USERS} render={() => {\r\n                                return <React.Suspense fallback={<Preloader isFetching={true}/>}>\r\n                                    <UsersContainer/>\r\n                                </React.Suspense>\r\n                            }}/>\r\n                            <Route path={PATH.LOGIN} render={() => <LoginAPIComponent/>}/>\r\n                            <Route path={'*'} render={() => <Error404Component/>}/>\r\n                        </Switch>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        initialized: state.app.initialized\r\n    }\r\n}\r\nconst AppContainer = connect<MapStateToPropsType, MapDispatchToPropsType, {}, AppStateType>(mapStateToProps, {initializedApp})(App)\r\nexport const SamuraiJSApp = () => {\r\n    return <React.StrictMode>\r\n        <Provider store={store}>\r\n            <AppContainer/>\r\n        </Provider>\r\n    </React.StrictMode>\r\n}\r\n","import {PhotoType, profileAPI, usersAPI} from \"../api/api\";\r\nimport {Dispatch} from \"redux\";\r\nimport {FormDataType} from \"../componets/Profile/ProfileInfo/ProfiledataForm\";\r\nimport {AppStateType} from \"./redux-store\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\ntype PostActionType = ReturnType<typeof postAdd>;\r\ntype SetUserProfileType = ReturnType<typeof setUserProfile>\r\ntype SetStatusProfileType = ReturnType<typeof setStatus>\r\ntype DeletePostActionType = ReturnType<typeof deletePost>\r\ntype SavePhotoSuccessActionType = ReturnType<typeof savePhotoSuccess>\r\ntype ProfileUpdateStatusActionType = ReturnType<typeof ProfileUpdateStatus>\r\ntype OwnActionType =\r\n    PostActionType\r\n    | SetUserProfileType\r\n    | SetStatusProfileType\r\n    | DeletePostActionType\r\n    | SavePhotoSuccessActionType\r\n    | ProfileUpdateStatusActionType\r\n\r\nexport type PostsType = {\r\n    id: number\r\n    message: string\r\n    likes: number\r\n};\r\nexport type InitialStateTypeProfilePageType = typeof initialState\r\nexport type ContactsType = {\r\n    facebook: null | string\r\n    website: null | string\r\n    vk: null | string\r\n    twitter: null | string\r\n    instagram: null | string\r\n    youtube: null | string\r\n    github: null | string\r\n    mainLink: null | string\r\n}\r\n type ProfileUpdateStatusType = \"success\" | \"error\"\r\nexport type ProfileStateType = {\r\n    aboutMe: string\r\n    contacts: ContactsType\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    fullName: string\r\n    userId: number | null\r\n    photos: PhotoType\r\n}\r\n\r\n\r\nconst initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likes: 3},\r\n        {id: 2, message: 'It\\'s my first post', likes: 6},\r\n        {id: 3, message: 'I like JS!!!', likes: 75},\r\n        {id: 4, message: 'Just, do it!!!', likes: 10}\r\n    ] as PostsType[],\r\n    profile: {} as ProfileStateType,\r\n    profileUpdateStatus: \"error\" as ProfileUpdateStatusType,\r\n    status: ''\r\n}\r\n\r\nconst profileReducer = (state: InitialStateTypeProfilePageType = initialState, action: OwnActionType): InitialStateTypeProfilePageType => {\r\n    switch (action.type) {\r\n        case 'social-network/profile-reducer/POST-ADD': {\r\n            const newPost: PostsType = {\r\n                id: new Date().getTime(),\r\n                message: action.value,\r\n                likes: 0\r\n            };\r\n            return {...state, posts: [...state.posts, newPost]};\r\n        }\r\n        case 'social-network/profile-reducer/SET-USER-PROFILE': {\r\n            return {...state, profile: action.profile};\r\n        }\r\n        case 'social-network/profile-reducer/SET-STATUS': {\r\n            return {...state, status: action.status};\r\n        }\r\n        case 'social-network/profile-reducer/POST-DELETE': {\r\n            return {...state, posts: state.posts.filter(i => i.id !== action.postId)}\r\n        }\r\n        case \"social-network/profile-reducer/SAVE-PHOTO\": {\r\n            return {...state, profile: {...state.profile, photos: action.photo}}\r\n        }\r\n        case \"social-network/profile-reducer/CHANGE-PROFILE-UPDATE-STATUS\": {\r\n            return {...state, profileUpdateStatus: action.value}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n//action\r\nexport const postAdd = (value: string) => {\r\n    return {type: 'social-network/profile-reducer/POST-ADD', value} as const\r\n};\r\nexport const deletePost = (postId: number) => {\r\n    return {type: 'social-network/profile-reducer/POST-DELETE', postId} as const\r\n};\r\nexport const setUserProfile = (profile: ProfileStateType) => {\r\n    return {type: 'social-network/profile-reducer/SET-USER-PROFILE', profile} as const\r\n};\r\nexport const setStatus = (status: string) => {\r\n    return {type: 'social-network/profile-reducer/SET-STATUS', status} as const\r\n};\r\nexport const savePhotoSuccess = (photo: PhotoType) => {\r\n    return {type: 'social-network/profile-reducer/SAVE-PHOTO', photo} as const\r\n};\r\nexport const ProfileUpdateStatus = (value: ProfileUpdateStatusType) => {\r\n   return {type: 'social-network/profile-reducer/CHANGE-PROFILE-UPDATE-STATUS', value} as const\r\n};\r\n\r\n//thunk\r\nexport const getUserProfile = (userId: number | null) => async (dispatch: Dispatch<OwnActionType>) => {\r\n    const response = await usersAPI.getProfile(userId)\r\n    dispatch(setUserProfile(response.data))\r\n}\r\nexport const getStatus = (userId: string) => async (dispatch: Dispatch<OwnActionType>) => {\r\n    const response = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(response.data))\r\n}\r\nexport const updateStatus = (status: string) => async (dispatch: Dispatch<OwnActionType>) => {\r\n    const response = await profileAPI.updateStatus(status)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status))\r\n    }\r\n}\r\nexport const savePhoto = (file: any) => async (dispatch: Dispatch<OwnActionType>) => {\r\n    const response = await profileAPI.savePhoto(file)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data))\r\n    }\r\n}\r\nexport const saveProfile = (value: FormDataType) =>\r\n    async (dispatch: any, getState: () => AppStateType) => {\r\n        const userId = getState().auth.data.id\r\n        const response = await profileAPI.saveProfile(value)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(getUserProfile(userId))\r\n            dispatch(ProfileUpdateStatus(\"success\"))\r\n        } else {\r\n            dispatch(ProfileUpdateStatus(\"error\"))\r\n            const message = response.data.messages.length > 0 ? response.data.messages : \"Some error\"\r\n            dispatch(stopSubmit(\"edit-profile\",{_error: message[0]}))\r\n        }\r\n    }\r\n\r\nexport default profileReducer"],"sourceRoot":""}