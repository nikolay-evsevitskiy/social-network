{"version":3,"sources":["hoc/WithAuthRedirect.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","assets/images/5546667.png","componets/Common/Paginator/Paginator.module.css","../node_modules/classnames/index.js","componets/Users/Users.module.css","Redux/users-selectors.ts","componets/Common/Paginator/Paginator.tsx","componets/Users/User.tsx","componets/Users/Users.tsx","componets/Users/UsersContainer.tsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","data","WithAuthRedirect","Component","connect","props","restProps","to","PATH","LOGIN","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","hasOwn","hasOwnProperty","classNames","classes","arguments","arg","argType","inner","apply","toString","prototype","key","call","join","default","getUsersPage","usersPage","getPageSize","pageSize","getTotalUsersCount","totalUsersCount","getCurrentPage","currentPage","getIsFetching","isFetching","getFollowingInProgress","followingInProgress","Paginator","totalItemsCount","onPageChanged","portionSize","pageCount","Math","ceil","pages","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","className","s","paginator","onClick","filter","p","map","cn","selectedPage","pageNumber","User","userId","follow","followed","photoUrl","name","unfollow","status","item","src","userPhoto","alt","disabled","some","id","Users","usersCount","users","u","photos","small","UsersAPIComponent","getUser","this","Preloader","React","compose","setCurrentPage"],"mappings":"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","file":"static/js/4.9766ca19.chunk.js","sourcesContent":["import React, {ComponentType} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {AppStateType} from \"../Redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\nimport { PATH } from \"../App\";\r\n\r\ntype MapStateToPropsForRedirectType = {\r\n    isAuth: boolean\r\n}\r\n\r\nconst mapStateToPropsForRedirect = (state: AppStateType): MapStateToPropsForRedirectType => ({\r\n    isAuth: state.auth.data.isAuth\r\n})\r\n\r\nexport function WithAuthRedirect<T>(Component: ComponentType<T>) {\r\n    function RedirectComponent(props: MapStateToPropsForRedirectType) {\r\n        let {isAuth, ...restProps} = props\r\n        if (!isAuth) return <Redirect to={PATH.LOGIN}/>\r\n        return (\r\n            <Component {...restProps as T} />\r\n        );\r\n    }\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n}\r\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default __webpack_public_path__ + \"static/media/5546667.a94eb87e.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__163DN\",\"paginator\":\"Paginator_paginator__2zlfq\",\"pageNumber\":\"Paginator_pageNumber__2OMki\"};","/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Users_item__3g1gJ\",\"message\":\"Users_message__3iEqZ\"};","import {AppStateType} from \"./redux-store\";\r\nimport {InitialStateTypeUsersPage} from \"./users-reducer\";\r\n\r\n\r\nexport const getUsersPage = (state: AppStateType): InitialStateTypeUsersPage => {\r\n    return state.usersPage\r\n}\r\nexport const getPageSize = (state: AppStateType): number => {\r\n    return state.usersPage.pageSize\r\n}\r\nexport const getTotalUsersCount = (state: AppStateType): number => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\nexport const getCurrentPage = (state: AppStateType): number => {\r\n    return state.usersPage.currentPage\r\n}\r\nexport const getIsFetching = (state: AppStateType): boolean => {\r\n    return state.usersPage.isFetching\r\n}\r\nexport const getFollowingInProgress = (state: AppStateType): number[] => {\r\n    return state.usersPage.followingInProgress\r\n}","import s from \"./Paginator.module.css\";\r\nimport React, {useState} from \"react\";\r\nimport cn from \"classnames\";\r\n\r\ntype PaginatorPropsType = {\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    portionSize?: number\r\n}\r\n\r\n\r\nexport const Paginator: React.FC<PaginatorPropsType> = ({\r\n                                                            totalItemsCount,\r\n                                                            pageSize,\r\n                                                            currentPage,\r\n                                                            onPageChanged,\r\n                                                            portionSize = 10\r\n                                                        }) => {\r\n    let pageCount = Math.ceil(totalItemsCount / pageSize)\r\n    let pages = []\r\n    for (let i = 1; i <= pageCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    const portionCount = Math.ceil(pageCount / portionSize)\r\n    const [portionNumber, setPortionNumber] = useState<number>(1)\r\n    const leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    const rightPortionPageNumber = portionNumber * portionSize\r\n\r\n    return <div className={s.paginator}>\r\n        {portionNumber > 1 &&\r\n            <button onClick={() => {\r\n                setPortionNumber(portionNumber - 1)\r\n            }}>PREV</button>}\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n            .map((p) => {\r\n                return <span className={cn({\r\n                    [s.selectedPage]: currentPage === p\r\n                }, s.pageNumber)}\r\n                             key={p}\r\n                             onClick={() => {\r\n                                 onPageChanged(p)\r\n                             }}>{p}</span>\r\n            })}\r\n        {portionCount > portionNumber &&\r\n            <button onClick={() => {\r\n                setPortionNumber(portionNumber + 1)\r\n            }}>NEXT</button>}\r\n    </div>\r\n}","import s from \"./Users.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport userPhoto from \"../../assets/images/5546667.png\";\r\nimport React from \"react\";\r\n\r\ntype UserProps = {\r\n    userId: number\r\n    photoUrl?: string\r\n    followed: boolean\r\n    followingInProgress: number[]\r\n    unfollow: (userId: number) => void\r\n    follow: (userId: number) => void\r\n    name: string\r\n    status?: string\r\n\r\n}\r\n\r\n\r\nexport const User: React.FC<UserProps> = ({\r\n                                              userId,\r\n                                              follow,\r\n                                              followed,\r\n                                              followingInProgress,\r\n                                              photoUrl,\r\n                                              name,\r\n                                              unfollow,\r\n                                              status\r\n                                          }) => {\r\n    return <div>\r\n        <span>\r\n                        <div className={s.item}>\r\n                            <NavLink to={'/profile/' + userId}>\r\n                            <img src={photoUrl != null ? photoUrl : userPhoto}\r\n                                 alt=\"avatar\"/>\r\n                                </NavLink>\r\n                        </div>\r\n                        <div>\r\n                            {followed\r\n                                ? <button disabled={followingInProgress.some(id => id === userId)} onClick={() => {\r\n                                    unfollow(userId)\r\n                                }}>Unfollow</button>\r\n                                : <button disabled={followingInProgress.some(id => id === userId)} onClick={() => {\r\n                                    follow(userId)\r\n                                }}>Follow</button>}\r\n                        </div>\r\n                    </span>\r\n        <span>\r\n                        <span>\r\n                            <div>{name}</div>\r\n                            <div>{status}</div>\r\n                        </span>\r\n                        {/*<span>*/}\r\n                        {/*    <div>{\"u.location.country\"}</div>*/}\r\n                        {/*    <div>{\"u.location.city\"}</div>*/}\r\n                        {/*</span>*/}\r\n                    </span>\r\n    </div>\r\n\r\n}","import React from 'react'\r\nimport {InitialStateTypeUsersPage} from '../../Redux/users-reducer';\r\nimport {Paginator} from \"../Common/Paginator/Paginator\";\r\nimport {User} from \"./User\";\r\n\r\ntype UsersPageType = {\r\n    usersCount: number\r\n    pageSize: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    currentPage: number\r\n    unfollow: (userId: number) => void\r\n    follow: (userId: number) => void\r\n    usersPage: InitialStateTypeUsersPage\r\n    followingInProgress: number[]\r\n}\r\n\r\nexport const Users: React.FC<UsersPageType> = ({\r\n                                                   usersCount,\r\n                                                   pageSize,\r\n                                                   onPageChanged,\r\n                                                   currentPage,\r\n                                                   usersPage,\r\n                                                   followingInProgress,\r\n                                                   follow,\r\n                                                   unfollow\r\n                                               }) => {\r\n\r\n    return <div>\r\n        <Paginator totalItemsCount={usersCount}\r\n                   pageSize={pageSize}\r\n                   currentPage={currentPage}\r\n                   onPageChanged={onPageChanged}/>\r\n        {\r\n            usersPage.users.map(u => <User userId={u.id}\r\n                                           photoUrl={u.photos.small}\r\n                                           followed={u.followed}\r\n                                           followingInProgress={followingInProgress}\r\n                                           unfollow={unfollow}\r\n                                           follow={follow}\r\n                                           name={u.name}\r\n                                           status={u.status}\r\n                                           key={u.id}\r\n                />\r\n            )\r\n        }\r\n    </div>;\r\n}","import {connect} from 'react-redux';\r\nimport {\r\n    follow, getUser,\r\n    InitialStateTypeUsersPage,\r\n    setCurrentPage,\r\n    unfollow\r\n} from '../../Redux/users-reducer';\r\nimport {AppStateType} from '../../Redux/redux-store';\r\nimport React from 'react';\r\nimport {Preloader} from \"../Common/Preloader/Preloader\";\r\nimport {compose} from 'redux';\r\nimport {\r\n    getCurrentPage, getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsersPage\r\n} from \"../../Redux/users-selectors\";\r\nimport {WithAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\nimport {Users} from \"./Users\";\r\n\r\ntype MapDispatchToPropsType = {\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    setCurrentPage: (currentPage: number) => void\r\n    getUser: (currentPage: number, pageSize: number) => void\r\n\r\n}\r\ntype MapStateToPropsType = {\r\n    usersPage: InitialStateTypeUsersPage\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: number[]\r\n}\r\ntype UsersAPIComponentType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nclass UsersAPIComponent extends React.Component<UsersAPIComponentType> {\r\n    componentDidMount() {\r\n        const {usersPage, pageSize} = this.props\r\n        this.props.getUser(usersPage.currentPage, pageSize)\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        const {pageSize} = this.props\r\n        this.props.getUser(pageNumber, pageSize)\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            <Preloader isFetching={this.props.usersPage.isFetching}/>\r\n            <Users usersCount={this.props.usersPage.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   onPageChanged={this.onPageChanged}\r\n                   currentPage={this.props.currentPage}\r\n                   unfollow={this.props.unfollow}\r\n                   follow={this.props.follow}\r\n                   usersPage={this.props.usersPage}\r\n                   followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        usersPage: getUsersPage(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    WithAuthRedirect,\r\n    connect<MapStateToPropsType, MapDispatchToPropsType, {}, AppStateType>(mapStateToProps, {\r\n        follow,\r\n        unfollow,\r\n        setCurrentPage,\r\n        getUser\r\n\r\n    })\r\n)(UsersAPIComponent)"],"sourceRoot":""}